<?php
class TenantHandler {
    private $db;
    private $api;
    private $admins;
    
    public function __construct($db, $api, $admins) {
        $this->db = $db;
        $this->api = $api;
        $this->admins = $admins;
    }
    
    public function handleStart($chat_id, $first_name = '') {
        $this->db->saveUserState($chat_id, 'waiting_name');
        
        $message = "๐ ะะพะฑัะพ ะฟะพะถะฐะปะพะฒะฐัั" . ($first_name ? ", {$first_name}!" : "!") . "\n\n";
        $message .= "ะััะฐะฒััะต ะทะฐัะฒะบั ะดะปั ะฐะดะผะธะฝะธัััะฐัะธะธ ะฑะธะทะฝะตั-ัะตะฝััะฐ.\n\n";
        $message .= "ะะพะถะฐะปัะนััะฐ, ะฒะฒะตะดะธัะต ะฒะฐัะต ะธะผั:";
        
        $this->api->sendMessage($chat_id, $message);
        logMessage("ะะพะปัะทะพะฒะฐัะตะปั {$chat_id} ะฝะฐัะฐะป ัะพะทะดะฐะฝะธะต ะทะฐัะฒะบะธ");
    }
    
    public function handleName($chat_id, $name) {
        $this->db->saveUserState($chat_id, 'waiting_phone', ['name' => $name]);
        $this->api->sendMessage($chat_id, "๐ ะขะตะฟะตัั ะฒะฒะตะดะธัะต ะฒะฐั ะฝะพะผะตั ัะตะปะตัะพะฝะฐ:");
    }
    
    public function handlePhone($chat_id, $phone) {
        $state = $this->db->getUserState($chat_id);
        $user_data = $state['state_data'] ?? [];
        $user_data['phone'] = $phone;
        
        $this->db->saveUserState($chat_id, 'waiting_message', $user_data);
        $this->api->sendMessage($chat_id, "๐ฌ ะะฟะธัะธัะต ะฒะฐัั ะฟัะพะฑะปะตะผั ะธะปะธ ะฒะพะฟัะพั:");
    }
    
    public function handleMessage($chat_id, $message_text) {
        $state = $this->db->getUserState($chat_id);
        $user_data = $state['state_data'] ?? [];
        $user_data['message'] = $message_text;
        
        $this->db->saveUserState($chat_id, 'waiting_photo', $user_data);
        
        $keyboard = [
            'keyboard' => [[['text' => '๐ ะัะฟัะฐะฒะธัั ะฑะตะท ัะพัะพ']]],
            'resize_keyboard' => true,
            'one_time_keyboard' => true
        ];
        
        $this->api->sendMessage($chat_id, 
            "๐ท ะั ะผะพะถะตัะต ะฟัะธะบัะตะฟะธัั ัะพัะพ ะบ ะทะฐัะฒะบะต. ะัะพััะพ ะพัะฟัะฐะฒััะต ัะพัะพ ะบะฐะบ ะพะฑััะฝะพะต ัะพะพะฑัะตะฝะธะต ๐.\n\n" .
            "ะะธะฑะพ ะฝะฐะถะผะธัะต ะบะฝะพะฟะบั \"๐ ะัะฟัะฐะฒะธัั ะฑะตะท ัะพัะพ\" ะฝะธะถะต:",
            json_encode($keyboard)
        );
    }
    
    public function handlePhoto($chat_id, $photo_id) {
        global $ADMINS;
        
        $state = $this->db->getUserState($chat_id);
        $user_data = $state['state_data'] ?? [];
        
        // ะกะพััะฐะฝัะตะผ ะทะฐัะฒะบั ะธ ะฟะพะปััะฐะตะผ ะฝะพะผะตั ะทะฐัะฒะบะธ (id)
        $request_id = $this->db->saveRequest(
            $chat_id,
            $user_data['name'],
            $user_data['phone'],
            $user_data['message'],
            $photo_id
        );
        
        // ะัะฟัะฐะฒะปัะตะผ ะทะฐัะฒะบั ะฐะดะผะธะฝะธัััะฐัะพัะฐะผ
        $this->sendRequestToAdmins($request_id, $user_data, $photo_id);
        
        // ะัะธัะฐะตะผ ัะพััะพัะฝะธะต
        $this->db->deleteUserState($chat_id);
        
        // ะัะฟัะฐะฒะปัะตะผ ะฟะพะดัะฒะตัะถะดะตะฝะธะต
        $this->api->sendMessage($chat_id,
            "โ ะกะฟะฐัะธะฑะพ ะทะฐ ะฒะฐัั ะทะฐัะฒะบั #{$request_id}! ะั ัะถะต ัะฐะฑะพัะฐะตะผ ะฟะพ ะฒะฐัะตะผั ะฒะพะฟัะพัั.",
            json_encode(['remove_keyboard' => true])
        );
        
        logMessage("ะะฐัะฒะบะฐ #{$request_id} ัะพะทะดะฐะฝะฐ ั ัะพัะพ");
    }
    
    public function handleNoPhoto($chat_id) {
        global $ADMINS;
        
        $state = $this->db->getUserState($chat_id);
        $user_data = $state['state_data'] ?? [];
        
        // ะกะพััะฐะฝัะตะผ ะทะฐัะฒะบั ะธ ะฟะพะปััะฐะตะผ ะฝะพะผะตั ะทะฐัะฒะบะธ (id)
        $request_id = $this->db->saveRequest(
            $chat_id,
            $user_data['name'],
            $user_data['phone'],
            $user_data['message'],
            null
        );
        
        // ะัะฟัะฐะฒะปัะตะผ ะทะฐัะฒะบั ะฐะดะผะธะฝะธัััะฐัะพัะฐะผ
        $this->sendRequestToAdmins($request_id, $user_data, null);
        
        // ะัะธัะฐะตะผ ัะพััะพัะฝะธะต
        $this->db->deleteUserState($chat_id);
        
        $this->api->sendMessage($chat_id,
            "โ ะกะฟะฐัะธะฑะพ ะทะฐ ะฒะฐัั ะทะฐัะฒะบั #{$request_id}! ะั ัะถะต ัะฐะฑะพัะฐะตะผ ะฟะพ ะฒะฐัะตะผั ะฒะพะฟัะพัั.",
            json_encode(['remove_keyboard' => true])
        );
        
        logMessage("ะะฐัะฒะบะฐ #{$request_id} ัะพะทะดะฐะฝะฐ ะฑะตะท ัะพัะพ");
    }
    
    private function sendRequestToAdmins($request_id, $user_data, $photo_id) {
        $message = "๐จ *ะะพะฒะฐั ะทะฐัะฒะบะฐ #{$request_id}*\n\n" .
                  "๐ค *ะะผั:* {$user_data['name']}\n" .
                  "๐ *ะขะตะปะตัะพะฝ:* {$user_data['phone']}\n" .
                  "๐ฌ *ะกะพะพะฑัะตะฝะธะต:* {$user_data['message']}\n\n" .
                  "๐ *ะัะตะผั ะฟะพะดะฐัะธ:* " . date('d.m.Y H:i:s');
        
        $keyboard = [
            'inline_keyboard' => [[
                ['text' => '๐ฌ ะัะฒะตัะธัั ะฐัะตะฝะดะฐัะพัั', 'callback_data' => "respond_{$request_id}"]
            ]]
        ];
        
        foreach ($this->admins as $admin_id) {
            if ($photo_id) {
                $this->api->sendPhoto($admin_id, $photo_id, $message, json_encode($keyboard));
            } else {
                $this->api->sendMessage($admin_id, $message, json_encode($keyboard));
            }
            logMessage("ะะฐัะฒะบะฐ #{$request_id} ะพัะฟัะฐะฒะปะตะฝะฐ ะฐะดะผะธะฝะธัััะฐัะพัั {$admin_id}");
        }
    }
    
    public function sendResponseToTenant($request_id, $response, $admin_id) {
        $request = $this->db->getRequest($request_id);
        if (!$request) {
            return false;
        }
        
        // ะะฑะฝะพะฒะปัะตะผ ะทะฐัะฒะบั ะฒ ะฑะฐะทะต ะดะฐะฝะฝัั
        $this->db->updateRequestResponse($request_id, $response, $admin_id);
        
        // ะัะฟัะฐะฒะปัะตะผ ะพัะฒะตั ะฐัะตะฝะดะฐัะพัั
        $this->api->sendMessage($request['user_id'],
            "๐ฉ *ะัะฒะตั ะพั ะฐะดะผะธะฝะธัััะฐัะพัะฐ ะฟะพ ะฒะฐัะตะน ะทะฐัะฒะบะต #{$request_id}:*\n\n" .
            "{$response}\n\n" .
            "โโ\n" .
            "ะัะปะธ ั ะฒะฐั ะตััั ะดะพะฟะพะปะฝะธัะตะปัะฝัะต ะฒะพะฟัะพัั, ะพััะฐะฒััะต ะฝะพะฒัั ะทะฐัะฒะบั ัะตัะตะท ะบะพะผะฐะฝะดั /start"
        );
        
        logMessage("ะัะฒะตั ะฝะฐ ะทะฐัะฒะบั #{$request_id} ะพัะฟัะฐะฒะปะตะฝ ะฐัะตะฝะดะฐัะพัั {$request['user_id']}");
        return true;
    }
}
?>